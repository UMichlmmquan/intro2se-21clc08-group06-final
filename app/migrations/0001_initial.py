# Generated by Django 4.2.2 on 2023-08-24 15:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_job_finder', models.BooleanField(default=False)),
                ('is_employer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('date_of_birth', models.TextField()),
                ('introduction', models.TextField()),
                ('experience', models.TextField()),
                ('education', models.TextField()),
                ('interest', models.TextField()),
                ('languages', models.TextField()),
                ('skill', models.TextField()),
                ('mail', models.EmailField(max_length=254)),
                ('phone', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pic_url', models.ImageField(upload_to='')),
                ('company_name', models.CharField(default='', max_length=100)),
                ('contact', models.CharField(blank=True, max_length=100, null=True)),
                ('introduction', models.TextField(default='')),
                ('city', models.TextField(default='')),
                ('caption', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('field', models.CharField(choices=[('Medicine', 'Medicine'), ('Law', 'Law'), ('Information Technology', 'Information Technology'), ('Finance and Banking', 'Finance and Banking'), ('Business Management', 'Business Management'), ('Education', 'Education'), ('Insurance Business', 'Insurance Business'), ('Real Estate', 'Real Estate'), ('Tourism', 'Tourism'), ('Electronics/Electricity', 'Electronics/Electricity'), ('Architecture', 'Architecture'), ('Hotel and Restaurant', 'Hotel and Restaurant'), ('Construction/Building', 'Construction/Building'), ('Finacial Investment', 'Finacial Investment')])),
                ('job', models.CharField()),
                ('description', models.TextField()),
                ('hour', models.CharField(max_length=255)),
                ('salary', models.CharField(choices=[('Below 100$', 'Below 100$'), ('100$ - 200$', '100$ - 200$'), ('200$ - 400$', '200$ - 400$'), ('400$ - 600$', '400$ - 600$'), ('600$ - 800$', '600$ - 800$'), ('800$ - 1000$', '800$ - 1000$'), ('Above 1000$', 'Above 1000$')])),
                ('deny', models.TextField()),
                ('approve', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('is_liked', models.BooleanField(default=False)),
                ('is_disliked', models.BooleanField(default=False)),
                ('dislikes', models.ManyToManyField(related_name='disliked_posts', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(related_name='liked_posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('company_name', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('address', models.TextField()),
                ('city', models.CharField(choices=[('An Giang', 'An Giang'), ('Ba Ria-Vung Tau', 'Ba Ria-Vung Tau'), ('Bac Lieu', 'Bac Lieu'), ('Bac Kan', 'Bac Kan'), ('Bac Giang', 'Bac Giang'), ('Bac Ninh', 'Bac Ninh'), ('Ben Tre', 'Ben Tre'), ('Binh Duong', 'Binh Duong'), ('Binh Dinh', 'Binh Dinh'), ('Binh Phuoc', 'Binh Phuoc'), ('Binh Thuan', 'Binh Thuan'), ('Ca Mau', 'Ca Mau'), ('Cao Bang', 'Cao Bang'), ('Can Tho', 'Can Tho'), ('Da Nang', 'Da Nang'), ('Dak Lak', 'Dak Lak'), ('Dak Nong', 'Dak Nong'), ('Dien Bien', 'Dien Bien'), ('Dong Nai', 'Dong Nai'), ('Dong Thap', 'Dong Thap'), ('Gia Lai', 'Gia Lai'), ('Ha Giang', 'Ha Giang'), ('Ha Nam', 'Ha Nam'), ('Ha Noi', 'Ha Noi'), ('Ha Tinh', 'Ha Tinh'), ('Hai Duong', 'Hai Duong'), ('Hai Phong', 'Hai Phong'), ('Hoa Binh', 'Hoa Binh'), ('Ho Chi Minh City', 'Ho Chi Minh City'), ('Hau Giang', 'Hau Giang'), ('Hung Yen', 'Hung Yen'), ('Khanh Hoa', 'Khanh Hoa'), ('Kien Giang', 'Kien Giang'), ('Kon Tum', 'Kon Tum'), ('Lai Chau', 'Lai Chau'), ('Lao Cai', 'Lao Cai'), ('Lang Son', 'Lang Son'), ('Lam Dong', 'Lam Dong'), ('Long An', 'Long An'), ('Nam Dinh', 'Nam Dinh'), ('Nghe An', 'Nghe An'), ('Ninh Binh', 'Ninh Binh'), ('Ninh Thuan', 'Ninh Thuan'), ('Phu Tho', 'Phu Tho'), ('Phu Yen', 'Phu Yen'), ('Quang Binh', 'Quang Binh'), ('Quang Nam', 'Quang Nam'), ('Quang Ngai', 'Quang Ngai'), ('Quang Ninh', 'Quang Ninh'), ('Quang Tri', 'Quang Tri'), ('Soc Trang', 'Soc Trang'), ('Son La', 'Son La'), ('Tay Ninh', 'Tay Ninh'), ('Thai Binh', 'Thai Binh'), ('Thai Nguyen', 'Thai Nguyen'), ('Thanh Hoa', 'Thanh Hoa'), ('Thua Thien-Hue', 'Thua Thien-Hue'), ('Tien Giang', 'Tien Giang'), ('Tra Vinh', 'Tra Vinh'), ('Tuyen Quang', 'Tuyen Quang'), ('Vinh Long', 'Vinh Long'), ('Vinh Phuc', 'Vinh Phuc'), ('Yen Bai', 'Yen Bai')], max_length=255)),
                ('introduction', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Job_finder',
            fields=[
                ('full_name', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('gender', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('city', models.CharField(choices=[('An Giang', 'An Giang'), ('Ba Ria-Vung Tau', 'Ba Ria-Vung Tau'), ('Bac Lieu', 'Bac Lieu'), ('Bac Kan', 'Bac Kan'), ('Bac Giang', 'Bac Giang'), ('Bac Ninh', 'Bac Ninh'), ('Ben Tre', 'Ben Tre'), ('Binh Duong', 'Binh Duong'), ('Binh Dinh', 'Binh Dinh'), ('Binh Phuoc', 'Binh Phuoc'), ('Binh Thuan', 'Binh Thuan'), ('Ca Mau', 'Ca Mau'), ('Cao Bang', 'Cao Bang'), ('Can Tho', 'Can Tho'), ('Da Nang', 'Da Nang'), ('Dak Lak', 'Dak Lak'), ('Dak Nong', 'Dak Nong'), ('Dien Bien', 'Dien Bien'), ('Dong Nai', 'Dong Nai'), ('Dong Thap', 'Dong Thap'), ('Gia Lai', 'Gia Lai'), ('Ha Giang', 'Ha Giang'), ('Ha Nam', 'Ha Nam'), ('Ha Noi', 'Ha Noi'), ('Ha Tinh', 'Ha Tinh'), ('Hai Duong', 'Hai Duong'), ('Hai Phong', 'Hai Phong'), ('Hoa Binh', 'Hoa Binh'), ('Ho Chi Minh City', 'Ho Chi Minh City'), ('Hau Giang', 'Hau Giang'), ('Hung Yen', 'Hung Yen'), ('Khanh Hoa', 'Khanh Hoa'), ('Kien Giang', 'Kien Giang'), ('Kon Tum', 'Kon Tum'), ('Lai Chau', 'Lai Chau'), ('Lao Cai', 'Lao Cai'), ('Lang Son', 'Lang Son'), ('Lam Dong', 'Lam Dong'), ('Long An', 'Long An'), ('Nam Dinh', 'Nam Dinh'), ('Nghe An', 'Nghe An'), ('Ninh Binh', 'Ninh Binh'), ('Ninh Thuan', 'Ninh Thuan'), ('Phu Tho', 'Phu Tho'), ('Phu Yen', 'Phu Yen'), ('Quang Binh', 'Quang Binh'), ('Quang Nam', 'Quang Nam'), ('Quang Ngai', 'Quang Ngai'), ('Quang Ninh', 'Quang Ninh'), ('Quang Tri', 'Quang Tri'), ('Soc Trang', 'Soc Trang'), ('Son La', 'Son La'), ('Tay Ninh', 'Tay Ninh'), ('Thai Binh', 'Thai Binh'), ('Thai Nguyen', 'Thai Nguyen'), ('Thanh Hoa', 'Thanh Hoa'), ('Thua Thien-Hue', 'Thua Thien-Hue'), ('Tien Giang', 'Tien Giang'), ('Tra Vinh', 'Tra Vinh'), ('Tuyen Quang', 'Tuyen Quang'), ('Vinh Long', 'Vinh Long'), ('Vinh Phuc', 'Vinh Phuc'), ('Yen Bai', 'Yen Bai')], max_length=255)),
                ('date_of_birth', models.TextField()),
                ('introduction', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(default='')),
                ('is_user', models.BooleanField(default=False)),
                ('is_post', models.BooleanField(default=False)),
                ('reported_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.post')),
                ('reported_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reported', to=settings.AUTH_USER_MODEL)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reporter', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dislikes', models.ManyToManyField(blank=True, related_name='disliked_comments', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_comments', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='employer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.employer'),
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=200)),
                ('user_name', models.CharField(max_length=200)),
                ('status_E', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('DENIED', 'Denied'), ('HIDE', 'Hide'), ('HIGHTLIGHT', 'Hightlight')], default='PENDING', max_length=10)),
                ('company_name', models.CharField(default='', max_length=200)),
                ('job_applied', models.CharField(default='', max_length=200)),
                ('status_JF', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('DENIED', 'Denied')], default='PENDING', max_length=10)),
                ('applied_time', models.DateTimeField(auto_now_add=True)),
                ('highlight', models.BooleanField(default=False)),
                ('deny', models.TextField()),
                ('approve', models.TextField()),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.cv')),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.employer')),
                ('job_finder', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='app.job_finder')),
            ],
        ),
        migrations.AddField(
            model_name='cv',
            name='finder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.job_finder'),
        ),
    ]
